{"ast":null,"code":"const getRecommendations = async movieName => {\n  try {\n    const response = await fetch(\"http://localhost:5000/recommend\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        movie_name: movieName\n      })\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.error || \"Error fetching recommendations.\");\n    }\n    return await response.json();\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"names":["getRecommendations","movieName","response","fetch","method","headers","body","JSON","stringify","movie_name","ok","errorData","json","Error","error"],"sources":["D:/OneDrive/Desktop/movieReact/frontend/src/App.js"],"sourcesContent":["const getRecommendations = async (movieName) => {\n  try {\n    const response = await fetch(\"http://localhost:5000/recommend\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ movie_name: movieName }),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.error || \"Error fetching recommendations.\");\n    }\n\n    return await response.json();\n  } catch (error) {\n    throw error;\n  }\n};\n"],"mappings":"AAAA,MAAMA,kBAAkB,GAAG,MAAOC,SAAS,IAAK;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;MAC9DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,UAAU,EAAER;MAAU,CAAC;IAChD,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACQ,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,KAAK,IAAI,iCAAiC,CAAC;IACvE;IAEA,OAAO,MAAMZ,QAAQ,CAACU,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}